var g_GLData=null;function GLRunTime(){this.glprogram=new GLProgram();this.camera=new Camera();this.WIDTH=gl.canvas.clientWidth;this.HEIGHT=gl.canvas.clientHeight;this.SCALE_STEP=10.0;this.SCALE_MIN=10.0;this.SCALE_MAX=2000.0;this.m_fModelLength=1.0;this.m_fOperateSensitivity=1.0;this.rotateSensitivity=1.0;this.ray_nds_near=vec3.create();this.ray_nds_far=vec3.create();this.ray_clip_near=vec4.create();this.ray_clip_far=vec4.create();this.viewMatInverse=mat4.create();this.projectionMatInverse=mat4.create();this.MVMatrix=mat4.create();this.MVPMatrix=mat4.create();this.inverseMVPMatrix=mat4.create();this.ray_world_near=vec4.create();this.ray_world_far=vec4.create();this.RayPoint1=new Point3(0,0,0);this.RayPoint2=new Point3(0,0,0);this.ObjectOriginalCenter=new Point3(0,0,0);this.PointNDCCenter=new Point3(0,0,0);this.ObjectMoveCenterStart=new Point3(0,0,0);this.ObjectMoveCenterEnd=new Point3(0,0,0);this.ObjectMovematrix=mat4.create();this.cameraAnmi=null;this.adfCamera=new ADF_CAMERA();this.adfCameraFocus=new Point3(0,0,0);this.curModelCenter=new Point3(0,0,0);this.curObjectCenter=new Point3(0,0,0);this.hashmapObjectID2Index=new HashMap();this.pickIndexs=new Array();this.DEFAULT_COMMENT_LINE_X=0.1;this.initRender=function(){g_GLData=Scene2GLData();this.glprogram.m_GLObjectSet=g_GLData.GLObjectSet;this.glprogram.m_GLPartSet=g_GLData.GLPartSet;this.glprogram.m_GLMaterialSet=g_GLData.GLMatertalSet;this.glprogram.m_GLAnnoSet=g_GLData.GLAnnotData;this.glprogram.m_arrBgTexId=g_GLData.GLBgImageData;this.m_fModelLength=g_GLData.GLModelLength;this.SCALE_MIN=this.m_fModelLength/20;this.SCALE_MAX=this.m_fModelLength*2;this.SCALE_STEP=this.SCALE_MIN;this.cameraAnmi=g_GLData.GLCamera;this.cameraAnmi.GetAnimCamera(0,this.adfCamera);if(this.adfCamera._fFOVY>0.0001){this.camera.setCamera(this.adfCamera._vEyePos.x-this.adfCamera._vFocus.x,this.adfCamera._vEyePos.y-this.adfCamera._vFocus.y,this.adfCamera._vEyePos.z-this.adfCamera._vFocus.z,0.0,0.0,0.0,this.adfCamera._vUp.x,this.adfCamera._vUp.y,this.adfCamera._vUp.z);this.camera.setNearFar(this.adfCamera._fZNear,this.adfCamera._fZFar);this.adfCameraFocus.x=this.adfCamera._vFocus.x;this.adfCameraFocus.y=this.adfCamera._vFocus.y;this.adfCameraFocus.z=this.adfCamera._vFocus.z;this.glprogram.setModelCenter(this.adfCameraFocus);this.ObjectOriginalCenter.x=this.adfCameraFocus.x;this.ObjectOriginalCenter.y=this.adfCameraFocus.y;this.ObjectOriginalCenter.z=this.adfCameraFocus.z;}else{this.camera.setCamera(g_GLData.GLDefEyePos.x,g_GLData.GLDefEyePos.y,g_GLData.GLDefEyePos.z,0.0,0.0,0.0,g_GLData.GLDefUpAxis.x,g_GLData.GLDefUpAxis.y,g_GLData.GLDefUpAxis.z);this.glprogram.setModelCenter(g_GLData.GLModelCenter);this.ObjectOriginalCenter.x=g_GLData.GLModelCenter.x;this.ObjectOriginalCenter.y=g_GLData.GLModelCenter.y;this.ObjectOriginalCenter.z=g_GLData.GLModelCenter.z;}
g_GLData.GLModelCenter.x=0;g_GLData.GLModelCenter.y=0;g_GLData.GLModelCenter.z=0;this.camera.setPerspectiveMatrix(45*Math.PI/180,this.WIDTH/this.HEIGHT);this.glprogram.initGLData();this.glprogram.initViewPort(this.WIDTH,this.HEIGHT,this.camera);}
this.draw=function(){this.glprogram.draw(this.camera);}
this.clear=function(){this.glprogram.clear();}
this.resetWindow=function(width,height){this.WIDTH=width,this.HEIGHT=height;this.camera.setPerspectiveMatrix(45*Math.PI/180,this.WIDTH/this.HEIGHT);this.glprogram.initViewPort(this.WIDTH,this.HEIGHT,this.camera);}
this.rotate=function(degreeX,degreeY,degreeZ){this.rotateX(degreeX*this.rotateSensitivity);this.rotateY(degreeY*this.rotateSensitivity);this.rotateZ(degreeZ*this.rotateSensitivity);}
this.move=function(deltaX,deltaY){this.curModelCenter.x=g_GLData.GLModelCenter.x;this.curModelCenter.y=g_GLData.GLModelCenter.y;this.curModelCenter.z=g_GLData.GLModelCenter.z;mat4.multiply(this.MVMatrix,this.camera.projectionMatrix,this.camera.viewMatrix);CalTranslatePoint(this.curModelCenter.x,this.curModelCenter.y,this.curModelCenter.z,this.MVMatrix,this.PointNDCCenter);let x=deltaX/this.WIDTH,y=deltaY/this.HEIGHT;mat4.invert(this.viewMatInverse,this.camera.viewMatrix);mat4.invert(this.projectionMatInverse,this.camera.projectionMatrix);mat4.multiply(this.inverseMVPMatrix,this.viewMatInverse,this.projectionMatInverse);CalTranslatePoint(0.0,0.0,this.PointNDCCenter.z,this.inverseMVPMatrix,this.ObjectMoveCenterStart);CalTranslatePoint(x,y,this.PointNDCCenter.z,this.inverseMVPMatrix,this.ObjectMoveCenterEnd);this.curModelCenter.x=this.ObjectMoveCenterEnd.x-this.ObjectMoveCenterStart.x;this.curModelCenter.y=this.ObjectMoveCenterEnd.y-this.ObjectMoveCenterStart.y;this.curModelCenter.z=this.ObjectMoveCenterEnd.z-this.ObjectMoveCenterStart.z;this.glprogram.moveModelCenter(this.curModelCenter);}
this.objectMove=function(nObjectIndex,screenX,screenY){let ObjectMat=this.glprogram.getObjectModelMatrix(nObjectIndex);let PartIndex=g_GLData.GLObjectSet._arrObjectSet[nObjectIndex]._uPartIndex;getModelBoxCenter(g_GLData.GLPartSet._arrPartSet[PartIndex]._arrPartLODData[0]._boxset._ObjectBox,this.curModelCenter);mat4.multiply(this.MVMatrix,this.camera.projectionMatrix,this.camera.viewMatrix);mat4.multiply(this.MVPMatrix,this.MVMatrix,ObjectMat);CalTranslatePoint(this.curModelCenter.x,this.curModelCenter.y,this.curModelCenter.z,this.MVPMatrix,this.PointNDCCenter);let x=screenX/this.WIDTH,y=screenY/this.HEIGHT;mat4.invert(this.viewMatInverse,this.camera.viewMatrix);mat4.invert(this.projectionMatInverse,this.camera.projectionMatrix);mat4.multiply(this.inverseMVPMatrix,this.viewMatInverse,this.projectionMatInverse);CalTranslatePoint(0.0,0.0,this.PointNDCCenter.z,this.inverseMVPMatrix,this.ObjectMoveCenterStart);CalTranslatePoint(x,y,this.PointNDCCenter.z,this.inverseMVPMatrix,this.ObjectMoveCenterEnd);mat4.identity(this.ObjectMovematrix);mat4.translate(this.ObjectMovematrix,this.ObjectMovematrix,vec3.fromValues(this.ObjectMoveCenterEnd.x-this.ObjectMoveCenterStart.x,this.ObjectMoveCenterEnd.y-this.ObjectMoveCenterStart.y,this.ObjectMoveCenterEnd.z-this.ObjectMoveCenterStart.z));this.glprogram.setObjectModelMatrixMult(this.ObjectMovematrix);}
this.scale=function(fScale){if(Math.abs(fScale-1.0)<0.0001){return;}
let tempScaleSensitivity=1.0;if(this.camera.getDist()<this.m_fModelLength){tempScaleSensitivity=this.m_fOperateSensitivity*0.5;}
else{tempScaleSensitivity=this.m_fOperateSensitivity*1.0;}
let fForward=0.0;if(fScale>1){fForward-=this.SCALE_STEP*tempScaleSensitivity;}
else{fForward+=this.SCALE_STEP*tempScaleSensitivity;}
this.camera.slide(0.0,0.0,fForward);}
this.pick=function(screenX,screenY,isShow,isMult){let x=(2.0*screenX)/this.WIDTH-1.0;let y=1.0-(2.0*screenY)/this.HEIGHT;this.ray_nds_near[0]=x,this.ray_nds_near[1]=y,this.ray_nds_near[2]=-1.0;this.ray_nds_far[0]=x,this.ray_nds_far[1]=y,this.ray_nds_far[2]=1.0;this.ray_clip_near[0]=this.ray_nds_near[0],this.ray_clip_near[1]=this.ray_nds_near[1];this.ray_clip_near[2]=this.ray_nds_near[2],this.ray_clip_near[3]=1.0;this.ray_clip_far[0]=this.ray_nds_far[0],this.ray_clip_far[1]=this.ray_nds_far[1];this.ray_clip_far[2]=this.ray_nds_far[2],this.ray_clip_far[3]=1.0;mat4.invert(this.viewMatInverse,this.camera.viewMatrix);mat4.invert(this.projectionMatInverse,this.camera.projectionMatrix);mat4.multiply(this.inverseMVPMatrix,this.viewMatInverse,this.projectionMatInverse);vec4.transformMat4(this.ray_world_near,this.ray_clip_near,this.inverseMVPMatrix);vec4.transformMat4(this.ray_world_far,this.ray_clip_far,this.inverseMVPMatrix);if(this.ray_world_near[3]!=0.0){this.ray_world_near[0]/=this.ray_world_near[3];this.ray_world_near[1]/=this.ray_world_near[3];this.ray_world_near[2]/=this.ray_world_near[3];}
if(this.ray_world_far[3]!=0.0){this.ray_world_far[0]/=this.ray_world_far[3];this.ray_world_far[1]/=this.ray_world_far[3];this.ray_world_far[2]/=this.ray_world_far[3];}
this.RayPoint1.x=this.ray_world_near[0],this.RayPoint1.y=this.ray_world_near[1],this.RayPoint1.z=this.ray_world_near[2];this.RayPoint2.x=this.ray_world_far[0],this.RayPoint2.y=this.ray_world_far[1],this.RayPoint2.z=this.ray_world_far[2];return this.glprogram.pickByRay(this.RayPoint1,this.RayPoint2,isShow,isMult);}
this.pickModelByIndexs=function(indexs){if(indexs==null||indexs.length<1){return;}
this.glprogram.pickMultByIndex(indexs);}
this.getPickStatus=function(){return this.glprogram.getPickStatus();}
this.getPickObjectIndexs=function(){return this.glprogram.getPickedIndex();}
this.pickAnnotation=function(screenX,screenY,isMult){return this.glprogram.pickAnnotationByRay(screenX,screenY,isMult);}
this.addCommentOnObjectById=function(objectID,annoText){let index=-1;for(let i=0;i<g_GLData.GLObjectSet._arrObjectSet.length;i++){if(objectID==g_GLData.GLObjectSet._arrObjectSet[i]._uObjectID){index=i;break;}}
if(index>=0){this.addCommentOnObjectByIndex(index,annoText);}}
this.addCommentOnObjectByIndex=function(index,annoText){let Center=this.getObjectCenterByIndex(index);let center3D=Center.Center3D;let center2D=Center.Center2D;let comment=new ADF_COMMENT();if(center2D.x>0&&center2D.x<0.8){comment.stuAnnot.annoPlaneLocal.x=center2D.x+this.DEFAULT_COMMENT_LINE_X;}else if(center2D.x>0.8){comment.stuAnnot.annoPlaneLocal.x=center2D.x-this.DEFAULT_COMMENT_LINE_X;}else if(center2D.x<0&&center2D.x>-0.8){comment.stuAnnot.annoPlaneLocal.x=center2D.x-this.DEFAULT_COMMENT_LINE_X;}else{comment.stuAnnot.annoPlaneLocal.x=center2D.x+this.DEFAULT_COMMENT_LINE_X;}
if(center2D.y>0&&center2D.y<0.8){comment.stuAnnot.annoPlaneLocal.y=center2D.y+this.DEFAULT_COMMENT_LINE_X;}else if(center2D.y>0.8){comment.stuAnnot.annoPlaneLocal.y=center2D.y-this.DEFAULT_COMMENT_LINE_X;}else if(center2D.y<0&&center2D.y>-0.8){comment.stuAnnot.annoPlaneLocal.y=center2D.y+this.DEFAULT_COMMENT_LINE_X;}else{comment.stuAnnot.annoPlaneLocal.y=center2D.y+this.DEFAULT_COMMENT_LINE_X;}
center3D.x-=comment.stuAnnot.annoPlaneLocal.x;center3D.y-=comment.stuAnnot.annoPlaneLocal.y;comment.stuAnnot.pNote.strText=GetSplitStringArray(annoText);comment.stuAnnot.pNote.arrLeaderPos.push(center3D);comment.stuProperty._strUserName="wjl";comment.stuProperty._strDateTime="20201102213000";comment.stuProperty._uStartFrameID=0;this.glprogram.addComment(this.camera,comment);}
this.getObjectCenterById=function(objectID){let index=-1;let center=null;for(let i=0;i<g_GLData.GLObjectSet._arrObjectSet.length;i++){if(objectID==g_GLData.GLObjectSet._arrObjectSet[i]._uObjectID){index=i;break;}}
if(index>=0){let center2D=this.getObjectCenterByIndex(index).Center2D;center=new Point2(0,0);center.x=(center2D.x+1.0)*this.WIDTH/2;center.y=(1.0-center2D.y)*this.HEIGHT/2;}
return center;}
this.getObjectCenterByIndex=function(index){let center2D=new Point3(0,0,0);let center3D=new Point3(0,0,0);let ObjectMat=this.glprogram.getObjectModelMatrix(index);let originObjectMat=this.glprogram.getObjectOriginMatrix(index);let PartIndex=g_GLData.GLObjectSet._arrObjectSet[index]._uPartIndex;getModelBoxCenter(g_GLData.GLPartSet._arrPartSet[PartIndex]._arrPartLODData[0]._boxset._ObjectBox,this.curModelCenter);mat4.multiply(this.MVMatrix,this.camera.projectionMatrix,this.camera.viewMatrix);mat4.multiply(this.MVPMatrix,this.MVMatrix,ObjectMat);CalTranslatePoint(this.curModelCenter.x,this.curModelCenter.y,this.curModelCenter.z,this.MVPMatrix,center2D);CalTranslatePoint(this.curModelCenter.x,this.curModelCenter.y,this.curModelCenter.z,originObjectMat,center3D);return{Center2D:center2D,Center3D:center3D,};}
this.setFocusOnObject=function(){this.pickIndexs.splice(0,this.pickIndexs.length);this.pickIndexs=this.glprogram.getPickedIndex();if(this.pickIndexs==null||this.pickIndexs.length==0){for(let i=0;i<this.glprogram.m_arrObjectMatrix.length;i++){this.pickIndexs.push(i);}}
let curModelBox=getPublicModelBox(g_GLData.GLObjectSet,g_GLData.GLPartSet,this.pickIndexs,this.glprogram.m_arrObjectMatrix);getModelBoxCenter(curModelBox,this.curModelCenter);this.curModelCenter.x=-this.curModelCenter.x;this.curModelCenter.y=-this.curModelCenter.y;this.curModelCenter.z=-this.curModelCenter.z;this.glprogram.moveModelCenter(this.curModelCenter);let distance=1.5*getModelBoxLength(curModelBox);this.camera.slide(0.0,0.0,distance-this.camera.getDist());this.camera.resetPerspectiveMatrix(45*Math.PI/180,this.WIDTH/this.HEIGHT);}
this.pickModelTreeNode=function(indexs){return this.glprogram.pickMultByIndex(indexs);}
this.setBackground=function(index){this.glprogram.setBackground(index);}
this.shiftView=function(viewType){switch(viewType){case 0:this.camera.setCamera(0.0,0.0,this.m_fModelLength,0.0,0.0,0.0,0.0,1.0,0.0);break;case 1:this.camera.setCamera(0.0,0.0,-this.m_fModelLength,0.0,0.0,0.0,0.0,1.0,0.0);break;case 2:this.camera.setCamera(-this.m_fModelLength,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0);break;case 3:this.camera.setCamera(this.m_fModelLength,0.0,0.0,0.0,0.0,0.0,0.0,1.0,0.0);break;case 4:this.camera.setCamera(0.0,this.m_fModelLength,0.0,0.0,0.0,0.0,0.0,0.0,1.0);break;case 5:this.camera.setCamera(0.0,-this.m_fModelLength,0.0,0.0,0.0,0.0,0.0,0.0,1.0);break;case 6:this.camera.setCamera(this.m_fModelLength/2.0,this.m_fModelLength/Math.cos(45.0*Math.PI/180.0),this.m_fModelLength/2.0,0.0,0.0,0.0,0.0,1.0,0.0);break;default:break;}
this.camera.setPerspectiveMatrix(45*Math.PI/180,this.WIDTH/this.HEIGHT);}
this.setObjectTransparent=function(transparent){this.glprogram.setObjectTransparentMult(transparent);}
this.getObjectTransparent=function(nObjectIndex){return this.glprogram.getObjectTransparent(nObjectIndex);}
this.setObjectVisible=function(visible){this.glprogram.setObjectVisibleMult(visible);}
this.getObjectVisible=function(nObjectIndex){return this.glprogram.getObjectVisible(nObjectIndex);}
this.setMultObjectVisible=function(indexs,visible){if(indexs==null||indexs.length<1){return;}
this.glprogram.setObjectVisibleByIndexs(indexs,visible);}
this.setObjectMaterial=function(red,green,blue,alpha){this.glprogram.setObjectMaterialMult(red,green,blue,alpha);}
this.home=function(){this.glprogram.home();}
this.setCameraAnim=function(uStartFrame){if(uStartFrame>g_GLData.GLObjectSet._uFrameSize||uStartFrame<0){return false;}
this.cameraAnmi.GetAnimCamera(uStartFrame,this.adfCamera);if(this.adfCamera._fFOVY<=0.0001){return true;}
this.camera.setCamera(this.adfCamera._vEyePos.x-this.adfCamera._vFocus.x,this.adfCamera._vEyePos.y-this.adfCamera._vFocus.y,this.adfCamera._vEyePos.z-this.adfCamera._vFocus.z,0.0,0.0,0.0,this.adfCamera._vUp.x,this.adfCamera._vUp.y,this.adfCamera._vUp.z);this.camera.setNearFar(this.adfCamera._fZNear,this.adfCamera._fZFar);this.camera.setPerspectiveMatrix(45*Math.PI/180,this.WIDTH/this.HEIGHT);this.adfCameraFocus.x=this.adfCamera._vFocus.x;this.adfCameraFocus.y=this.adfCamera._vFocus.y;this.adfCameraFocus.z=this.adfCamera._vFocus.z;this.glprogram.setModelCenter(this.adfCameraFocus);return true;}
this.setObjectAnim=function(uStartFrame){if(uStartFrame>g_GLData.GLObjectSet._uFrameSize||uStartFrame<0){return false;}
this.glprogram.setObjectAnim(uStartFrame);return true;}
this.setAnnotationAnim=function(uStartFrame){if(uStartFrame>g_GLData.GLObjectSet._uFrameSize||uStartFrame<0){return false;}
this.glprogram.setAnnotationAnim(uStartFrame);return true;}
this.getTotalFrame=function(){return g_GLData.GLObjectSet._uFrameSize;}
this.initDigitalTwinData=function(){this.home();this.glprogram.moveModelCenter(this.ObjectOriginalCenter);this.setObjectIDHashMap();}
this.setObjectIDHashMap=function(){if(this.hashmapObjectID2Index.isEmpty()){for(let i=0;i<g_GLData.GLObjectSet._arrObjectSet.length;i++){this.hashmapObjectID2Index.put(g_GLData.GLObjectSet._arrObjectSet[i]._uObjectID,i);}}}
this.setObjectOriWorldMatrix=function(uObjectID,strMatrix){let nObjectIndex=this.hashmapObjectID2Index.get(uObjectID);if(nObjectIndex==undefined){return;}
CalMat4(g_GLData.GLObjectSet._arrObjectSet[nObjectIndex]._matLocal,g_matLocal);CalMat4(strMatrix,g_matWorld);mat4.multiply(g_matMultiply,g_matWorld,g_matLocal);this.glprogram.setObjectMatrixByIndex(nObjectIndex,g_matMultiply);}
this.setObjectsPickedByIds=function(objectIDs){if(objectIDs==null){return;}
let arrObjectIndexs=new Array();for(let j=0;j<objectIDs.length;++j){for(let i=0;i<g_GLData.GLObjectSet._arrObjectSet.length;i++){if(g_GLData.GLObjectSet._arrObjectSet[i]._uObjectID==objectIDs[j]){arrObjectIndexs.push(i);break;}}}
this.glprogram.pickMultByIndex(arrObjectIndexs);}
this.rotateX=function(degreeX){let d=this.camera.getDist();let cnt=10;let theta=degreeX/cnt;let slide_d=-2*d*Math.sin(theta*Math.PI/360);this.camera.yaw(theta/2);for(;cnt!=0;--cnt){this.camera.slide(slide_d,0,0);this.camera.yaw(theta);}
this.camera.yaw(-theta/2);}
this.rotateY=function(degreeY){let d=this.camera.getDist();let cnt=10;let theta=degreeY/cnt;let slide_d=2*d*Math.sin(theta*Math.PI/360);this.camera.pitch(theta/2);for(;cnt!=0;--cnt){this.camera.slide(0,slide_d,0);this.camera.pitch(theta);}
this.camera.pitch(-theta/2);}
this.rotateZ=function(degreeZ){this.camera.roll(degreeZ);}}